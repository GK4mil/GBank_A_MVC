@model GBankAdminService.Domain.Entities.Bill
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Details</h1>

<div>
    <h4>Bill</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.balance)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.balance)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.billNumber)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.billNumber)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.ID">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
@{
    var parms = new Dictionary<String, String>
{ { "q", "" },
        {"billid",@Model.ID.ToString() }
    };
}
<div> <h4>Clients assigned to bill </h4></div>
<div> <h4><a asp-controller="Clients" asp-action="Search" asp-all-route-data="parms">Assign client to bill</a> </h4></div>
<div>
    <h4>Users</h4>
    <table class="table">
        <thead>
            <tr>
                <th>
                    Firstname
                </th>
                <th>
                    Lastname
                </th>
                <th>
                    Username
                </th>

                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Users)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.firstname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.lastname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Username)
                </td>
                @{
                    var parms1 = new Dictionary<String, String>
                                    { { "billid", Model.ID.ToString() },
                {"clientid",item.ID.ToString() }
             };
                }
                <td>

                    <a asp-action="Details" asp-controller="Clients" asp-route-id="@item.ID">Details</a> |
                    <button type="button" username="@item.Username.ToString()" class="btn btn-danger btn-xs" data-toggle="modal" data-target="#myModal" id=@item.ID onClick="clicked_button(this)"><span class="glyphicon glyphicon-trash" style="vertical-align:middle;margin-top: -5px"></span> Unassign from bill</button>
                </td>
            </tr>
            }
        </tbody>
    </table>
</div>

<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" style="margin-left:1px">Confirm Delete</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to unassign Client: <b id="InvoiceID"></b> from bill?</p>
            </div>
            <div class="modal-footer">

                <form asp-controller="Bills" asp-action="unassign" method="get" class="form-inline" role="form">
                    <input type="hidden" id="deleterid" class="deleter_input" name="clientid">
                    <input type="hidden" value="@Model.ID.ToString()" name="billid">
                    <button type="submit" class="btn btn-danger"><span class="glyphicon glyphicon-trash" style="vertical-align:middle;margin-top: -5px"></span> Delete</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </form>
            </div>
        </div>
    </div>
</div>


@section scripts{

    <script>
        var deleterinput = document.getElementById("deleterid");
        var modal_text = document.getElementById("InvoiceID");


        function clicked_button(clicked) {
            deleterinput.value = clicked.id;
            modal_text.innerHTML = clicked.getAttribute("username");
        }
    </script>

}